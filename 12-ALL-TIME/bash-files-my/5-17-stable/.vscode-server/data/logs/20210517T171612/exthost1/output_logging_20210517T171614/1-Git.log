Looking for git in: git
Using git 2.25.1 from git
Opening repository for path='/home/bryan' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/bryan/.bash_logout' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/bryan/.bashrc' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/bryan/.gitconfig' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/bryan/.landscape' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/bryan/.motd_shown' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/bryan/.profile' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/bryan/.sudo_as_admin_successful' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/bryan/.vscode-server' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/bryan/.wget-hsts' failed; ex=Error: spawn ENOTDIR
Opening repository for path='/home/bryan/C:\' failed; ex=spawn git ENOENT {
  "gitErrorCode": "NotAGitRepository"
}Error: spawn git ENOENT
	at Process.ChildProcess._handle.onexit (internal/child_process.js:269:19)
	at onErrorNT (internal/child_process.js:465:16)
	at processTicksAndRejections (internal/process/task_queues.js:80:21)
Opening repository for path='/home/bryan' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/bryan/' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/bryan/' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/bryan/' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
Opening repository for path='/home/bryan/' failed; ex=Failed to execute git {
  "exitCode": 128,
  "gitErrorCode": "NotAGitRepository",
  "gitCommand": "rev-parse",
  "stdout": "",
  "stderr": "fatal: not a git repository (or any of the parent directories): .git\n"
}
> git rev-parse --git-dir
Open repository: /home/bryan/.nvm
> git status -z -u --ignore-submodules
> git symbolic-ref --short HEAD
fatal: ref HEAD is not a symbolic ref
> git rev-parse HEAD
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git check-ignore -v -z --stdin
> git fetch --all --prune
> git status -z -u --ignore-submodules
> git symbolic-ref --short HEAD
fatal: ref HEAD is not a symbolic ref
> git rev-parse HEAD
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u --ignore-submodules
> git symbolic-ref --short HEAD
fatal: ref HEAD is not a symbolic ref
> git rev-parse HEAD
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
> git status -z -u --ignore-submodules
> git symbolic-ref --short HEAD
fatal: ref HEAD is not a symbolic ref
> git rev-parse HEAD
> git for-each-ref --sort -committerdate --format %(refname) %(objectname) %(*objectname)
> git remote --verbose
> git config --get commit.template
